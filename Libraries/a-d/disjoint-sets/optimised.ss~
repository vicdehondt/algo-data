#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file is in PLT Scheme editor format.
   Open this file in DrScheme version 370 or later to read it.

   Most likely, it was created by saving a program in DrScheme,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://www.plt-scheme.org
|#
 29 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wxmedia\0"
4 1 8 #"wximage\0"
2 0 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 56
(
 #"(lib \"hrule-snip.ss\" \"macro-debugger\" \"syntax-browse"
 #"r\")\0"
) 1 0 18 #"java-comment-box%\0"
1 0 23 #"java-interactions-box%\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55
(
 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private"
 #"\")\0"
) 1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
00000000000 1 63 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 13 90 -1 90 -1 1 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 15
#"text:ports err\0"
0 -1 1 #"\0"
1 0 92 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 27
#"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1 1 1 128 0 255 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1 1 1 128 0 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 128 0 255 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 128 0 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drscheme:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drscheme:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
41 #"profj:syntax-colors:scheme:block-comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 35
#"profj:syntax-colors:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 0 139 0 0 0 -1 -1 2 37
#"profj:syntax-colors:scheme:prim-type\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 0 139 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"profj:syntax-colors:scheme:identifier\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 34
#"profj:syntax-colors:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 35
#"profj:syntax-colors:scheme:literal\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 35
#"profj:syntax-colors:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 33
#"profj:syntax-colors:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 35
#"profj:syntax-colors:scheme:default\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 37
#"profj:syntax-colors:scheme:uncovered\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 35
#"profj:syntax-colors:scheme:covered\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 0 139 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 4 4
#"XML\0"
0 70 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 8 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 8 24
#"drscheme:text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 100 0 0 0 0 -1 -1 0 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 0 1
#"\0"
0 75 12 #"Courier New\0"
0 13 90 -1 90 -1 1 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 92 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1
00000000002 0 00000000000 7 00000000000 542 0 18 3 74
(
 #";-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*"
 #"-*-*-*-"
) 0 0 4 29 1 #"\n"
0 0 18 3 74
(
 #";-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*"
 #"-*-*-*-"
) 0 0 4 29 1 #"\n"
0 0 18 3 74
(
 #";-*-*                                                              "
 #"   *-*-"
) 0 0 4 29 1 #"\n"
0 0 18 3 74
(
 #";-*-*             Disjoint Sets (Optimised Implementation)         "
 #"   *-*-"
) 0 0 4 29 1 #"\n"
0 0 18 3 74
(
 #";-*-*                                                              "
 #"   *-*-"
) 0 0 4 29 1 #"\n"
0 0 18 3 74
(
 #";-*-*                       Wolfgang De Meuter                     "
 #"   *-*-"
) 0 0 4 29 1 #"\n"
0 0 18 3 74
(
 #";-*-*                 2008 Programming Technology Lab              "
 #"   *-*-"
) 0 0 4 29 1 #"\n"
0 0 18 3 74
(
 #";-*-*                   Vrije Universiteit Brussel                 "
 #"   *-*-"
) 0 0 4 29 1 #"\n"
0 0 18 3 74
(
 #";-*-*                                                              "
 #"   *-*-"
) 0 0 4 29 1 #"\n"
0 0 18 3 74
(
 #";-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*"
 #"-*-*-*-"
) 0 0 4 29 1 #"\n"
0 0 18 3 74
(
 #";-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*"
 #"-*-*-*-"
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 27 3 6 #"#!r6rs"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"library"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 12 #"disjoint-set"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 6 #"export"
0 0 4 3 1 #" "
0 0 14 3 3 #"new"
0 0 4 3 1 #" "
0 0 14 3 13 #"disjoint-set?"
0 0 4 3 1 #" "
0 0 14 3 4 #"find"
0 0 4 3 1 #" "
0 0 14 3 6 #"union!"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 6 #"import"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 4 #"rnrs"
0 0 4 3 1 #" "
0 0 14 3 4 #"base"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 21 3 1 #"6"
0 0 23 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 16 #"disjoint-set-tag"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 17 #"fast-disjoint-set"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 4 #"make"
0 0 4 3 1 #" "
0 0 14 3 4 #"size"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 23 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 14 3 16 #"disjoint-set-tag"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 23 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 11 #"make-vector"
0 0 4 3 1 #" "
0 0 14 3 4 #"size"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 3 #"())"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 23 3 1 #"("
0 0 14 3 11 #"make-vector"
0 0 4 3 1 #" "
0 0 14 3 4 #"size"
0 0 4 3 1 #" "
0 0 21 3 1 #"0"
0 0 23 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 5 #"ranks"
0 0 4 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 23 3 1 #"("
0 0 14 3 4 #"cddr"
0 0 4 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 7 #"parents"
0 0 4 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 23 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 3 #"new"
0 0 4 3 1 #" "
0 0 14 3 4 #"size"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 9 #"node-sets"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 4 #"make"
0 0 4 3 1 #" "
0 0 14 3 4 #"size"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 8 #"pointers"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 7 #"parents"
0 0 4 3 1 #" "
0 0 14 3 9 #"node-sets"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 7 #"numbers"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 5 #"ranks"
0 0 4 3 1 #" "
0 0 14 3 9 #"node-sets"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 23 3 1 #"("
0 0 16 3 3 #"let"
0 0 4 3 1 #" "
0 0 14 3 14 #"all-singletons"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 23 3 2 #"(("
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 21 3 1 #"0"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 23 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 7 #"numbers"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 21 3 1 #"0"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 23 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 8 #"pointers"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 23 3 1 #"("
0 0 16 3 2 #"if"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 1 #"<"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 21 3 1 #"1"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"size"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 23 3 1 #"("
0 0 14 3 14 #"all-singletons"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 14 3 9 #"node-sets"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 13 #"disjoint-set?"
0 0 4 3 1 #" "
0 0 14 3 3 #"any"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 23 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 5 #"pair?"
0 0 4 3 1 #" "
0 0 14 3 3 #"any"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 23 3 1 #"("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 3 #"any"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 16 #"disjoint-set-tag"
0 0 23 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 7 00000000373 4 00000000000 1 00000000000 61 0 2 3 1 #" "
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 2 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 10 #"singleton!"
0 0 2 3 1 #" "
0 0 14 3 4 #"dset"
0 0 2 3 1 #" "
0 0 14 3 4 #"nmbr"
0 0 23 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 3 #"   "
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 2 3 1 #" "
0 0 14 3 7 #"parents"
0 0 2 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 8 #".parents"
0 0 2 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 3 3 #"   "
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 2 3 1 #" "
0 0 14 3 5 #"ranks"
0 0 2 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 6 #".ranks"
0 0 2 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 3 3 #"   "
0 0 23 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 2 3 1 #" "
0 0 14 3 5 #"ranks"
0 0 2 3 1 #" "
0 0 14 3 4 #"nmbr"
0 0 2 3 1 #" "
0 0 21 3 1 #"0"
0 0 23 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 3 #"   "
0 0 23 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 2 3 1 #" "
0 0 14 3 7 #"parents"
0 0 2 3 1 #" "
0 0 14 3 4 #"nmbr"
0 0 2 3 1 #" "
0 0 14 3 4 #"nmbr"
0 0 23 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 3 #"   "
0 0 14 3 4 #"dset"
0 0 23 3 1 #")"
0 00000000000 0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 4 #"find"
0 0 4 3 1 #" "
0 0 14 3 4 #"dset"
0 0 4 3 1 #" "
0 0 14 3 4 #"nmbr"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 8 #"pointers"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 7 #"parents"
0 0 4 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 8 #"find-rec"
0 0 4 3 1 #" "
0 0 14 3 4 #"elmt"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 23 3 1 #"("
0 0 16 3 2 #"if"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 3 #"not"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 4 #"elmt"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 8 #"pointers"
0 0 4 3 1 #" "
0 0 14 3 4 #"elmt"
0 0 23 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 23 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 8 #"pointers"
0 0 4 3 1 #" "
0 0 14 3 4 #"elmt"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 8 #"find-rec"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 8 #"pointers"
0 0 4 3 1 #" "
0 0 14 3 4 #"elmt"
0 0 23 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 23 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 8 #"pointers"
0 0 4 3 1 #" "
0 0 14 3 4 #"elmt"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 23 3 1 #"("
0 0 14 3 8 #"find-rec"
0 0 4 3 1 #" "
0 0 14 3 4 #"nmbr"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 6 #"union!"
0 0 4 3 1 #" "
0 0 14 3 4 #"dset"
0 0 4 3 1 #" "
0 0 14 3 4 #"set1"
0 0 4 3 1 #" "
0 0 14 3 4 #"set2"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 7 #"numbers"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 5 #"ranks"
0 0 4 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 8 #"pointers"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 7 #"parents"
0 0 4 3 1 #" "
0 0 14 3 4 #"dset"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 23 3 1 #"("
0 0 16 3 4 #"cond"
0 0 4 3 1 #" "
0 0 23 3 2 #"(("
0 0 14 3 1 #">"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 7 #"numbers"
0 0 4 3 1 #" "
0 0 14 3 4 #"set1"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 23 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 7 #"numbers"
0 0 4 3 1 #" "
0 0 14 3 4 #"set2"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 23 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 8 #"pointers"
0 0 4 3 1 #" "
0 0 14 3 4 #"set2"
0 0 4 3 1 #" "
0 0 14 3 4 #"set1"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 23 3 2 #"(("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 7 #"numbers"
0 0 4 3 1 #" "
0 0 14 3 4 #"set1"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 23 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 7 #"numbers"
0 0 4 3 1 #" "
0 0 14 3 4 #"set2"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 23 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 8 #"pointers"
0 0 4 3 1 #" "
0 0 14 3 4 #"set1"
0 0 4 3 1 #" "
0 0 14 3 4 #"set2"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 23 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 7 #"numbers"
0 0 4 3 1 #" "
0 0 14 3 4 #"set2"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 21 3 1 #"1"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 7 #"numbers"
0 0 4 3 1 #" "
0 0 14 3 4 #"set2"
0 0 23 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 23 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 23 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 8 #"pointers"
0 0 4 3 1 #" "
0 0 14 3 4 #"set1"
0 0 4 3 1 #" "
0 0 14 3 4 #"set2"
0 0 23 3 5 #")))))"
0 00000000000
